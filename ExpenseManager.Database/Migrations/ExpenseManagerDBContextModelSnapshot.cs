// <auto-generated />
using System;
using ExpenseManager.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseManager.Api.Database.Migrations
{
    [DbContext(typeof(ExpenseManagerDBContext))]
    partial class ExpenseManagerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpenseManager.Api.Database.Entities.DefaultExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DefaultExpenseCategories", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Rent, Mortgage, Property Taxes, Home Insurance",
                            Title = "Housing"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Electricity, Gas, Water, Internet, Cable/Streaming",
                            Title = "Utilities"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Food, Beverages, Household Supplies",
                            Title = "Groceries"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Gas, Public Transport, Car Maintenance, Parking",
                            Title = "Transportation"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Restaurants, Cafes, Fast Food",
                            Title = "Dining Out"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Movies, Concerts, Sports, Hobbies",
                            Title = "Entertainment"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Clothing, Shoes, Accessories, Electronics",
                            Title = "Shopping"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Doctor visits, Prescriptions, Medical Supplies",
                            Title = "Healthcare"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Hair Salons, Gyms, Cosmetics",
                            Title = "Personal Care"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Tuition fees, Books, School Supplies",
                            Title = "Education"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Flights, Hotels, Car Rentals, Tours",
                            Title = "Travel"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Birthdays, Holidays, Special Occasions",
                            Title = "Gifts"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Food, Vet bills, Supplies",
                            Title = "Pets"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Streaming services, Gym memberships, Magazines",
                            Title = "Subscriptions"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Health insurance, Life insurance, Car insurance",
                            Title = "Insurance"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Loans, Credit Cards",
                            Title = "Debt Repayment"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Retirement savings, Emergency fund",
                            Title = "Savings"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Donations	Non-profit organizations",
                            Title = "Charitable"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Repairs, Renovations, Landscaping",
                            Title = "Home Improvement"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Miscellaneous expenses not fitting other categories",
                            Title = "Other"
                        });
                });

            modelBuilder.Entity("ExpenseManager.Api.Database.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserExpenseCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("UserExpenseCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses", "dbo");
                });

            modelBuilder.Entity("ExpenseManager.Api.Database.Entities.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Debit Card"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Credit Card"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Net Banking"
                        },
                        new
                        {
                            Id = 5,
                            Description = "UPI"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Check"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Other (Unspecified)"
                        });
                });

            modelBuilder.Entity("ExpenseManager.Api.Database.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Users", "dbo");
                });

            modelBuilder.Entity("ExpenseManager.Api.Database.Entities.UserExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserExpenseCategories", "dbo");
                });

            modelBuilder.Entity("ExpenseManager.Api.Database.Entities.Expense", b =>
                {
                    b.HasOne("ExpenseManager.Api.Database.Entities.PaymentType", "PaymentType")
                        .WithMany("Expenses")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ExpenseManager.Api.Database.Entities.UserExpenseCategory", "UserExpenseCategory")
                        .WithMany("Expenses")
                        .HasForeignKey("UserExpenseCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ExpenseManager.Api.Database.Entities.User", "User")
                        .WithMany("Expenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaymentType");

                    b.Navigation("User");

                    b.Navigation("UserExpenseCategory");
                });

            modelBuilder.Entity("ExpenseManager.Api.Database.Entities.UserExpenseCategory", b =>
                {
                    b.HasOne("ExpenseManager.Api.Database.Entities.User", "User")
                        .WithMany("UserExpenseCategories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseManager.Api.Database.Entities.PaymentType", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("ExpenseManager.Api.Database.Entities.User", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("UserExpenseCategories");
                });

            modelBuilder.Entity("ExpenseManager.Api.Database.Entities.UserExpenseCategory", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
